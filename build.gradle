plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'com.github.Cinnaio'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    compileOnly "de.tr7zw:item-nbt-api-plugin:2.12.2"
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    implementation 'org.yaml:snakeyaml:1.29'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set('ItemProp')
    archiveClassifier.set('')
    archiveVersion.set('1.0.0')
    destinationDirectory = file('E:\\Workship\\Leisure\\mc server\\plugins')
//    exclude("com.github.MilkBowl:VaultAPI")
}